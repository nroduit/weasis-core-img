<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.weasis.core</groupId>
    <artifactId>weasis-core-img-bom</artifactId>
    <version>${revision}${sha1}${changelist}</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>weasis-core-img</artifactId>
  <name>Image processing (OpenCV)</name>
  <packaging>bundle</packaging>

  <properties>
    <java-version>17</java-version>
    <jdk-version>17</jdk-version>
    <enforcer.jdk-version>[${jdk-version},)</enforcer.jdk-version>
    <enforcer.maven-version>[3.6.3,)</enforcer.maven-version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <bundle.symbolicName>${project.artifactId}</bundle.symbolicName>

    <slf4j.version>2.0.17</slf4j.version>
    <junit-bom.version>5.13.0-M3</junit-bom.version>
    <mockito.version>5.17.0</mockito.version>
    <mockito-inline.version>5.2.0</mockito-inline.version>
    <junit-pioneer.version>2.3.0</junit-pioneer.version>

    <sonar.projectKey>weasis-core-img</sonar.projectKey>
    <sonar.organization>nroduit-github</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.language>java</sonar.language>
    <sonar.java.source>${java-version}</sonar.java.source>
    <sonar.test.exclusions>src/test/**/*</sonar.test.exclusions>

    <!-- Tests require the native library and can only be run on Linux, Windows and macOS-->
    <argLine>-Djava.library.path=${project.build.directory}/lib/${os-name}-${cpu-name}</argLine>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <release>${java-version}</release>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>src-dependencies</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.weasis.thirdparty.org.opencv</groupId>
                  <artifactId>opencv</artifactId>
                  <version>${weasis.opencv.native.version}</version>
                  <classifier>sources</classifier>
                </artifactItem>
              </artifactItems>
              <excludes>META-INF/**,**/*.kt</excludes>
              <outputDirectory>${project.build.directory}/sources-import</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>copy</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.weasis.thirdparty.org.opencv</groupId>
                  <artifactId>${lib-file-name}</artifactId>
                  <type>${lib-file-ext}</type>
                  <classifier>${os-name}-${cpu-name}</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/lib/${os-name}-${cpu-name}</outputDirectory>
                  <destFileName>${lib-file-name}.${lib-file-ext}</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/java</source>
                <source>${project.build.directory}/sources-import</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>default-bundle</id>
            <phase>package</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
            <configuration>
              <instructions>
                <Bundle-SymbolicName>${bundle.symbolicName}</Bundle-SymbolicName>
                <Bundle-Version>${project.version}</Bundle-Version>
                <Bundle-RequiredExecutionEnvironment>JavaSE-17
                </Bundle-RequiredExecutionEnvironment>
                <_removeheaders>
                  Bnd-LastModified,Include-Resource,Private-Package,Tool,Built-By,Created-By
                </_removeheaders>
                <_noee>true</_noee>
                <_nouses>true</_nouses>
                <Import-Package>org.slf4j;version=!,*</Import-Package>
                <Embed-Dependency>*;scope=compile;inline=true</Embed-Dependency>
                <Embed-Directory>lib</Embed-Directory>
                <Embed-StripGroup>true</Embed-StripGroup>
                <Multi-Release>true</Multi-Release>
              </instructions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>min-requirement</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${enforcer.maven-version}</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${enforcer.jdk-version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>bind-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <configuration>
          <java>
            <googleJavaFormat/>
            <toggleOffOn>
              <off>@formatter:off</off>
              <on>@formatter:on</on>
            </toggleOffOn>
            <licenseHeader>
              <!-- @formatter:off -->
              <content>
/*
 * Copyright (c) $YEAR Weasis Team and other contributors.
 *
 * This program and the accompanying materials are made available under the terms of the Eclipse
 * Public License 2.0 which is available at https://www.eclipse.org/legal/epl-2.0, or the Apache
 * License, Version 2.0 which is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
 */
              </content>
              <!-- @formatter:on -->
            </licenseHeader>
          </java>
        </configuration>
        <executions>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <executions>
          <!-- enable flattening -->
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
            <configuration>
              <!-- Keeps all optional POM elements that are required for OSS Repository-Hosting -->
              <!--> https://www.mojohaus.org/flatten-maven-plugin/apidocs/org/codehaus/mojo/flatten/FlattenMode.html -->
              <flattenMode>ossrh</flattenMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/org/opencv/**/*.*</exclude>
                <exclude>org/weasis/core/annotations/*.*</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-bom</artifactId>
        <version>${slf4j.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-bom</artifactId>
        <version>${mockito.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- OpenCV native library -->
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>libopencv_java</artifactId>
      <type>so</type>
      <classifier>linux-aarch64</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>libopencv_java</artifactId>
      <type>so</type>
      <classifier>linux-armv7a</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>libopencv_java</artifactId>
      <type>so</type>
      <classifier>linux-x86-64</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>libopencv_java</artifactId>
      <type>dylib</type>
      <classifier>macosx-aarch64</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>libopencv_java</artifactId>
      <type>dylib</type>
      <classifier>macosx-x86-64</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>opencv_java</artifactId>
      <type>dll</type>
      <classifier>windows-x86</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>opencv_java</artifactId>
      <type>dll</type>
      <classifier>windows-x86-64</classifier>
      <scope>provided</scope>
    </dependency>

    <!-- FOR TESTS -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito-inline.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit-pioneer</groupId>
      <artifactId>junit-pioneer</artifactId>
      <version>${junit-pioneer.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
